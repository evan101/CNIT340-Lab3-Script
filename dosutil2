#!/bin/bash
# Script Name: dosutil
# Purpose: Emulate basic DOS/Windows file management commands in Linux/UNIX
# Author: Evan Singer
# Last Revision Date: 11/3/2023
# Variables:
#    ARG1 = Command
#    ARG2 = Filename
#    ARG3 = Destination Directory
COMMAND=$1
SOURCEDIR=$2
DESTDIR=$3
shift

# Define function for displaying the help message
help() {
    echo "Usage: dosutil <command> [parameters]"
    echo "Supported Commands:"
    echo "  author - Output your name in the form last, first"
    echo "  type   - Output the content of the file in the first parameter"
    echo "  copy   - Copy a file"
    echo "  ren    - Rename a file"
    echo "  move   - Move a file"
    echo "  del    - Delete a file (without asking for confirmation)"
    echo "  help   - Output this help message"
}

# Processes the command with a case statement
case "$COMMAND" in
    author) # prints author's name
        if [ $# -gt 0 ]; then
            echo "Error: There are too many arguments for the 'author' command."
            help
            exit 1
        fi
        echo "Singer, Evan"
        ;;

    type) # Output the content of the file specified in the first parameter
        # Check if a filename is provided
        if [ $# -eq 0 ]; then
            echo "Error: The filename is missing for the 'type' command."
            help
            exit 1
        fi
        # Check if the filename does not exist
        if [ ! -e "$SOURCEDIR" ]; then
            echo "Error: There is no such file or directory for the 'type' command."
            help
            exit 1
        fi
        # Check if there is more than one argument
        if [ $# -gt 1 ]; then
            echo "Error: There are too many arguments for the 'type' command."
            help
            exit 1
        fi
        cat "$SOURCEDIR"
        ;;

    copy) # Copy a file from the first parameter to the second parameter
        # Check if the source and destination file was provided
        if [ $# -lt 2 ]; then
            echo "Error: There is a missing source or destination filename for the 'copy' command."
            help
            exit 1
        fi
        # Check if the source directory does not exist
        if [ ! -e "$SOURCEDIR" ]; then
            echo "Error: There is no such source file or directory for the 'copy' command."
            help
            exit 1
        fi
        # Check if there is more than two arguments
        if [ $# -gt 2 ]; then
            echo "Error: There are too many arguments for the 'copy' command."
            help
            exit 1
        fi
        cp "$SOURCEDIR" "$DESTDIR"
        ;;

    ren) # Rename a file from the first parameter to the second parameter
        # Check if the source and destination file was provided
        if [ $# -lt 2 ]; then
            echo "Error: There is a Missing source or destination filename for the 'ren' command."
            help
            exit 1
        fi
        # Check if the source directory does not exist
        if [ ! -e "$SOURCEDIR" ]; then
            echo "Error: There is no such source file or directory for the 'ren' command."
            help
            exit 1
        fi
        # Check if there is more than two arguments
        if [ $# -gt 2 ]; then
            echo "Error: There are too many arguments for the 'ren' command."
            help
            exit 1
        fi
        mv "$SOURCEDIR" "$DESTDIR"
        ;;

    move) # Moves file from first to second parameter
        # Checks if source and destination file provided
        if [ $# -lt 2 ]; then
            echo "Error: There is a missing source or destination filename for the 'move' command."
            help
            exit 1
        fi
        # Checks if the source directory exists
        if [ ! -e "$SOURCEDIR" ]; then
            echo "Error: There is no such source file or directory for the 'move' command."
            help
            exit 1
        fi
        # Checks for more than two arguments
        if [ $# -gt 2 ]; then
            echo "Error: There are too many arguments for the 'move' command."
            help
            exit 1
        fi
        mv "$SOURCEDIR" "$DESTDIR"
        ;;

    del) # Deletes a file (no confirmation needed)
        # Check if a filename is provided
        if [ $# -eq 0 ]; then
            echo "Error: The filename for 'del' command is missing."
            help
            exit 1
        fi
        # Check if filename exists
        if [ ! -e "$SOURCEDIR" ]; then
            echo "Error: There is no file or directory for 'del' command."
            help
            exit 1
        fi
        # Check if there is more than one argument
        if [ $# -gt 1 ]; then
            echo "Error: There are too many arguments for 'del' command."
            help
            exit 1
        fi
        rm -f "$SOURCEDIR"
        ;;

    help) # Ouputs help function
        # Check if there is an argument
        if [ $# -gt 0 ]; then
            echo "Error: There are too many arguments for 'help' command."
            help
            exit 1
        fi
        help
        ;;

    *) # Check if there is no command
        if [ -z "$COMMAND" ]; then
            echo "Error: You have not provided a command."
            help
            exit 1
        else
            #Display help message
            echo "Error: Invalid command '$COMMAND'"
            help
            exit 1
        fi
        ;;
esac

exit 0
