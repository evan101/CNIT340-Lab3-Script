#!/bin/bash
# Script Name: dosutil
# Purpose: Emulate basic DOS/Windows file management commands in Linux/UNIX
# Author: Evan Singer
# Last Revision Date: 2023-11-3
# Variables:
# ARG1 = Command
# ARG2 = Source Directory or Filename
# ARG3 = Destination Directory

# Read the command, the source directory, and the destination directory and shift it from the argument list
COMMAND=$1
SOURCEDIR=$2
DESTDIR=$3
shift

# Define function for displaying the help message
display_help() {
    echo "Usage: dosutil <command> [parameters]"
    echo "Supported Commands:"
    echo "  author - Output your name in the form last, first"
    echo "  type   - Output the content of the file in the first parameter"
    echo "  copy   - Copy a file"
    echo "  ren    - Rename a file"
    echo "  move   - Move a file"
    echo "  del    - Delete a file (without asking for confirmation)"
    echo "  help   - Output this help message"
}

# Process the command using a case statement
case "$COMMAND" in
    author) # Output author name
        # Check if there is an argument
        if [ $# -gt 0 ]; then
            echo "Error: Too many arguments for 'author' command."
            display_help
            exit 1
        fi
        echo "Singer, Evan"
        ;;

    type) # Output the content of the file specified in the first parameter
        # Check if a filename is provided
        if [ $# -eq 0 ]; then
            echo "Error: Missing filename for 'type' command."
            display_help
            exit 1
        fi
        # Check if the filename does not exist
        if [ ! -e "$SOURCEDIR" ]; then
            echo "Error: No such file or directory for 'type' command."
            display_help
            exit 1
        fi
        # Check if there is more than one argument
        if [ $# -gt 1 ]; then
            echo "Error: Too many arguments for 'type' command."
            display_help
            exit 1
        fi
        cat "$SOURCEDIR"
        ;;

    copy) # Copy a file from the first parameter to the second parameter
        # Check if the source and destination file was provided
        if [ $# -lt 2 ]; then
            echo "Error: Missing source or destination filename for 'copy' command."
            display_help
            exit 1
        fi
        # Check if the source directory does not exist
        if [ ! -e "$SOURCEDIR" ]; then
            echo "Error: No such source file or directory for 'copy' command."
            display_help
            exit 1
        fi
        # Check if there is more than two arguments
        if [ $# -gt 2 ]; then
            echo "Error: Too many arguments for 'copy' command."
            display_help
            exit 1
        fi
        cp "$SOURCEDIR" "$DESTDIR"
        ;;

    ren) # Rename a file from the first parameter to the second parameter
        # Check if the source and destination file was provided
        if [ $# -lt 2 ]; then
            echo "Error: Missing source or destination filename for 'ren' command."
            display_help
            exit 1
        fi
        # Check if the source directory does not exist
        if [ ! -e "$SOURCEDIR" ]; then
            echo "Error: No such source file or directory for 'ren' command."
            display_help
            exit 1
        fi
        # Check if there is more than two arguments
        if [ $# -gt 2 ]; then
            echo "Error: Too many arguments for 'ren' command."
            display_help
            exit 1
        fi
        mv "$SOURCEDIR" "$DESTDIR"
        ;;

    move) # Move a file from the first parameter to the second parameter
        # Check if the source and destination file was provided
        if [ $# -lt 2 ]; then
            echo "Error: Missing source or destination filename for 'move' command."
            display_help
            exit 1
        fi
        # Check if the source directory does not exist
        if [ ! -e "$SOURCEDIR" ]; then
            echo "Error: No such source file or directory for 'move' command."
            display_help
            exit 1
        fi
        # Check if there is more than two arguments
        if [ $# -gt 2 ]; then
            echo "Error: Too many arguments for 'move' command."
            display_help
            exit 1
        fi
        mv "$SOURCEDIR" "$DESTDIR"
        ;;

    del) # Delete a file specified in the first parameter without confirmation
        # Check if a filename is provided
        if [ $# -eq 0 ]; then
            echo "Error: Missing filename for 'del' command."
            display_help
            exit 1
        fi
        # Check if the filename does not exist
        if [ ! -e "$SOURCEDIR" ]; then
            echo "Error: No such file or directory for 'del' command."
            display_help
            exit 1
        fi
        # Check if there is more than one argument
        if [ $# -gt 1 ]; then
            echo "Error: Too many arguments for 'del' command."
            display_help
            exit 1
        fi
        rm -f "$SOURCEDIR"
        ;;

    help) # Ouput help function
        # Check if there is an argument
        if [ $# -gt 0 ]; then
            echo "Error: Too many arguments for 'help' command."
            display_help
            exit 1
        fi
        display_help
        ;;

    *) # For all other commands
        # Check if there is no command
        if [ -z "$COMMAND" ]; then
            echo "Error: You have not provided a command."
            display_help
            exit 1
        else
            # Invalid command, display help message
            echo "Error: Invalid command '$COMMAND'"
            display_help
            exit 1
        fi
        ;;
esac

# Exit successfully
exit 0
